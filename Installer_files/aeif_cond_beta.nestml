"""
aeif_cond_beta - Conductance based exponential integrate-and-fire neuron model
###############################################################################

Description
+++++++++++

aeif_cond_beta is the adaptive exponential integrate and fire neuron according to Brette and Gerstner (2005), with post-synaptic conductances in the form of a bi-exponential ("beta") function.

The membrane potential is given by the following differential equation:

.. math::

   C_m \frac{dV_m}{dt} =
   -g_L(V_m-E_L)+g_L\Delta_T\exp\left(\frac{V_m-V_{th}}{\Delta_T}\right) -
 g_e(t)(V_m-E_e) \\
                                                     -g_i(t)(V_m-E_i)-w + I_e

and

.. math::

 \tau_w \frac{dw}{dt} = a(V_m-E_L) - w

Note that the membrane potential can diverge to positive infinity due to the exponential term. To avoid numerical instabilities, instead of :math:`V_m`, the value :math:`\min(V_m,V_{peak})` is used in the dynamical equations.


References
++++++++++

.. [1] Brette R and Gerstner W (2005). Adaptive exponential
       integrate-and-fire model as an effective description of neuronal
       activity. Journal of Neurophysiology. 943637-3642
       DOI: https://doi.org/10.1152/jn.00686.2005


See also
++++++++

iaf_cond_beta, aeif_cond_exp
"""
neuron aeif_cond_beta:

    state:
        V_m mV = E_L       # Membrane potential
        w pA = 0 pA        # Spike-adaptation current
        r integer = 0      # Counts number of tick during the refractory period
        
        # inputs from the inhibitory conductance
        g_in real = 0
        g_in$ real = g_I_const * (1 / tau_syn_rise_I - 1 / tau_syn_decay_I)

        # inputs from the excitatory conductance
        g_ex real = 0
        g_ex$ real = g_E_const * (1 / tau_syn_rise_E - 1 / tau_syn_decay_E)

    equations:
        inline V_bounded mV = min(V_m, V_peak) # prevent exponential divergence
        kernel g_in' = g_in$ - g_in / tau_syn_rise_I,
               g_in$' = -g_in$ / tau_syn_decay_I

        kernel g_ex' = g_ex$ - g_ex / tau_syn_rise_E,
               g_ex$' = -g_ex$ / tau_syn_decay_E

        # Add inlines to simplify the equation definition of V_m
        inline exp_arg real = (V_bounded - V_th) / Delta_T
        inline I_spike pA = g_L * Delta_T * exp(exp_arg)
        inline I_syn_exc pA = convolve(g_ex, exc_spikes) * nS * (V_bounded - E_exc)
        inline I_syn_inh pA = convolve(g_in, inh_spikes) * nS * (V_bounded - E_inh)

        V_m' = (-g_L * (V_bounded - E_L) + I_spike - I_syn_exc - I_syn_inh - w + I_e + I_stim) / C_m
        w' = (a * (V_bounded - E_L) - w) / tau_w

    parameters:
        # membrane parameters
        C_m pF = 281.0 pF         # Membrane Capacitance
        t_ref ms = 0.0 ms         # Refractory period
        V_reset mV = -60.0 mV     # Reset Potential
        g_L nS = 30.0 nS          # Leak Conductance
        E_L mV = -70.6 mV         # Leak reversal Potential (aka resting potential)

        # spike adaptation parameters
        a nS = 4 nS               # Subthreshold adaptation
        b pA = 80.5 pA            # Spike-triggered adaptation
        Delta_T mV = 2.0 mV       # Slope factor
        tau_w ms = 144.0 ms       # Adaptation time constant
        V_th mV = -50.4 mV        # Threshold Potential
        V_peak mV = 0 mV          # Spike detection threshold

        # synaptic parameters
        E_exc mV = 0 mV            # Excitatory reversal Potential
        E_inh mV = -85.0 mV        # Inhibitory reversal Potential
        tau_syn_rise_I ms = .2 ms    # Synaptic time constant inhibitory synapse
        tau_syn_decay_I ms = 2 ms    # Synaptic time constant for inhibitory synapse
        tau_syn_rise_E ms = .2 ms    # Synaptic time constant excitatory synapse
        tau_syn_decay_E ms = 2 ms    # Synaptic time constant for excitatory synapse

        # constant external input current
        I_e pA = 0 pA

    internals:
        # time of peak conductance excursion after spike arrival at t = 0
        t_peak_E real = tau_syn_decay_E * tau_syn_rise_E * ln(tau_syn_decay_E / tau_syn_rise_E) / (tau_syn_decay_E - tau_syn_rise_E)
        t_peak_I real = tau_syn_decay_I * tau_syn_rise_I * ln(tau_syn_decay_I / tau_syn_rise_I) / (tau_syn_decay_I - tau_syn_rise_I)

        # normalisation constants to ensure arriving spike yields peak conductance of 1 nS
        g_E_const real = 1 / (exp(-t_peak_E / tau_syn_decay_E) - exp(-t_peak_E / tau_syn_rise_E))
        g_I_const real = 1 / (exp(-t_peak_I / tau_syn_decay_I) - exp(-t_peak_I / tau_syn_rise_I))

        # refractory time in steps
        RefractoryCounts integer = steps(t_ref)

    input:
        inh_spikes <- inhibitory spike
        exc_spikes <- excitatory spike
        I_stim pA <- continuous

    output:
        spike

    update:
        integrate_odes()

        if r > 0: # refractory
            r -= 1 # decrement refractory ticks count
            V_m = V_reset # clamp potential
        elif V_m >= V_peak: # threshold crossing detection
            r = RefractoryCounts
            V_m = V_reset # clamp potential
            w += b
            emit_spike()
